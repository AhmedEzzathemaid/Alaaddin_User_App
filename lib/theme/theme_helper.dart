import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary.withOpacity(1),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          shadowColor: colorScheme.primary,
          elevation: 5,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.primary.withOpacity(1),
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(4.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.whiteA700;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.whiteA700;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          color: colorScheme.primary.withOpacity(1),
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray200,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: colorScheme.onSecondaryContainer,
          fontSize: 16.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray600,
          fontSize: 14.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray600,
          fontSize: 12.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: colorScheme.onSecondaryContainer,
          fontSize: 35.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.onSecondaryContainer,
          fontSize: 30.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: Color(0XFF1A232B),
          fontSize: 26.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w500,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 25.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: colorScheme.onSecondaryContainer,
          fontSize: 13.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 11.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: colorScheme.onSecondaryContainer,
          fontSize: 20.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: colorScheme.onSecondaryContainer,
          fontSize: 16.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: colorScheme.onSecondaryContainer,
          fontSize: 14.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0X38BFA274),
    primaryContainer: Color(0X4C3C3C43),
    secondaryContainer: Color(0XFFCFCFD6),

    // Error colors
    errorContainer: Color(0XFF1383F1),
    onError: Color(0XFFEC9CE4),
    onErrorContainer: Color(0XFF061023),

    // On colors(text colors)
    onPrimary: Color(0XFF1D1E20),
    onPrimaryContainer: Color(0XFF040415),
    onSecondaryContainer: Color(0XFF1A232B),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber700 => Color(0XFFF59E0B);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blueA200 => Color(0XFF4485FD);
  Color get blueA400 => Color(0XFF1877F2);

  // BlueGray
  Color get blueGray100 => Color(0XFFD7D7D7);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray10002 => Color(0XFFD4D4D4);
  Color get blueGray300 => Color(0XFF7B9EBC);
  Color get blueGray50 => Color(0XFFF1F1F1);
  Color get blueGray700 => Color(0XFF475669);

  // Cyan
  Color get cyan500 => Color(0XFF00C9E4);
  Color get cyan70030 => Color(0X300093B9);

  // DeepOrange
  Color get deepOrange400 => Color(0XFFF17547);
  Color get deepOrange40001 => Color(0XFFFF7854);
  Color get deepOrange50 => Color(0XFFFDE6E6);
  Color get deepOrangeA700 => Color(0XFFEF1F00);

  // DeepPurple
  Color get deepPurple400 => Color(0XFF7268DD);
  Color get deepPurpleA100 => Color(0XFFA584FF);
  Color get deepPurpleA10001 => Color(0XFFB69CFF);

  // Gray
  Color get gray100 => Color(0XFFF5F6FA);
  Color get gray10001 => Color(0XFFF3F3F8);
  Color get gray10002 => Color(0XFFF3F3F3);
  Color get gray10003 => Color(0XFFF5F5F5);
  Color get gray10004 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFE5E7EB);
  Color get gray20001 => Color(0XFFE9E9E9);
  Color get gray20002 => Color(0XFFEBEBEB);
  Color get gray20003 => Color(0XFFEFEFEF);
  Color get gray20004 => Color(0XFFE7E7E7);
  Color get gray20005 => Color(0XFFEEEEEE);
  Color get gray20006 => Color(0XFFF0F0F0);
  Color get gray20007 => Color(0XFFE8E8E8);
  Color get gray20008 => Color(0XFFEAEAEA);
  Color get gray300 => Color(0XFFE6E6E6);
  Color get gray30001 => Color(0XFFE1E1E1);
  Color get gray30002 => Color(0XFFDDDDDD);
  Color get gray30003 => Color(0XFFE4E4E4);
  Color get gray30004 => Color(0XFFE0E0E0);
  Color get gray30005 => Color(0XFFDBDBDB);
  Color get gray30006 => Color(0XFFE3E3E3);
  Color get gray400 => Color(0XFFB7B7B7);
  Color get gray40001 => Color(0XFFC6C6C6);
  Color get gray40002 => Color(0XFFBFBFBF);
  Color get gray40003 => Color(0XFFBCBCBC);
  Color get gray40004 => Color(0XFFB8B8B8);
  Color get gray40005 => Color(0XFFC7C7C7);
  Color get gray40006 => Color(0XFFBBBBBB);
  Color get gray40007 => Color(0XFFC8C8C8);
  Color get gray40008 => Color(0XFFC5C5C5);
  Color get gray50 => Color(0XFFF8F8F8);
  Color get gray500 => Color(0XFFA5A5A5);
  Color get gray50001 => Color(0XFF8F959E);
  Color get gray5001 => Color(0XFFF9FAFB);
  Color get gray600 => Color(0XFF7A7F8A);
  Color get gray60001 => Color(0XFF6F6F6F);
  Color get gray700 => Color(0XFF706C64);
  Color get gray900 => Color(0XFF151328);

  // Graye
  Color get gray6001e => Color(0X1E767680);

  // Green
  Color get green600 => Color(0XFF34A853);
  Color get green60047 => Color(0X4733A853);
  Color get greenA400 => Color(0XFF19D37A);
  Color get greenA40001 => Color(0XFF07CB6F);
  Color get greenA700 => Color(0XFF00CC6A);

  // Indigod
  Color get indigo2002d => Color(0X2D99AAC5);

  // Indigo
  Color get indigoA400 => Color(0XFF3E65EE);

  // LightBlue
  Color get lightBlue800 => Color(0XFF0076B2);

  // LightGreen
  Color get lightGreen70033 => Color(0X336DA714);
  Color get lightGreenA700 => Color(0XFF50D53A);
  Color get lightGreenA70042 => Color(0X4273CC00);

  // Orange
  Color get orange400 => Color(0XFFFDA625);

  // Pink
  Color get pink300 => Color(0XFFFD43B3);
  Color get pink50070 => Color(0X70FF1661);

  // Purple
  Color get purple300 => Color(0XFFB052DD);
  Color get purple400 => Color(0XFFC140A3);

  // Red
  Color get red500 => Color(0XFFFD4343);
  Color get red600 => Color(0XFFEA3B3B);
  Color get red800 => Color(0XFFC5221F);

  // Teal
  Color get teal400 => Color(0XFF22B07D);
  Color get teal40001 => Color(0XFF2DBD89);
  Color get teal50 => Color(0XFFDBF6EB);
  Color get teal5001 => Color(0XFFDCF6EB);
  Color get teal5002 => Color(0XFFDBF5EA);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
